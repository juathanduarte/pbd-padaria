# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'excluir_Fornecedor.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import email
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QWidget, QFileDialog, QTableWidget, QTableWidgetItem 

##Libs diversas
import psycopg2
import pandas as pd
import variaveisControle

host = variaveisControle.host
user = variaveisControle.user
password = variaveisControle.password
database = variaveisControle.database
port = variaveisControle.port

class Ui_excluir_fornecedor(object):
    def setupUi(self, exclusao_fornecedor):
        exclusao_fornecedor.setObjectName("exclusao_fornecedor")
        exclusao_fornecedor.resize(400, 203)
        self.CNPJ_Fornecedor = QtWidgets.QLabel(exclusao_fornecedor)
        self.CNPJ_Fornecedor.setGeometry(QtCore.QRect(60, 40, 91, 20))
        self.CNPJ_Fornecedor.setObjectName("CNPJ_Fornecedor")
        self.search_Fornecedor = QtWidgets.QLineEdit(exclusao_fornecedor)
        self.search_Fornecedor.setGeometry(QtCore.QRect(150, 40, 151, 20))
        self.search_Fornecedor.setObjectName("search_Fornecedor")
        self.search_button = QtWidgets.QPushButton(exclusao_fornecedor)
        self.search_button.setGeometry(QtCore.QRect(310, 40, 21, 21))
        self.search_button.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("pesquisar.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.search_button.setIcon(icon)
        self.search_button.setObjectName("search_button")
        self.excluircesta_button = QtWidgets.QPushButton(exclusao_fornecedor)
        self.excluircesta_button.setGeometry(QtCore.QRect(230, 90, 101, 71))
        self.excluircesta_button.setStyleSheet("image: url(:cliente/logo_cliente/cliente.png)")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/logo_excluir/excluir.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.excluircesta_button.setIcon(icon1)
        self.excluircesta_button.setObjectName("excluircesta_button")
        self.cancelar_button = QtWidgets.QPushButton(exclusao_fornecedor)
        self.cancelar_button.setGeometry(QtCore.QRect(110, 90, 101, 71))
        self.cancelar_button.setStyleSheet("image: url(:cliente/logo_cliente/cliente.png)")
        self.cancelar_button.setIcon(icon1)
        self.cancelar_button.setObjectName("cancelar_button")

        self.retranslateUi(exclusao_fornecedor)
        QtCore.QMetaObject.connectSlotsByName(exclusao_fornecedor)

    def retranslateUi(self, exclusao_fornecedor):
        _translate = QtCore.QCoreApplication.translate
        exclusao_fornecedor.setWindowTitle(_translate("exclusao_fornecedor", "Form"))
        self.CNPJ_Fornecedor.setText(_translate("exclusao_fornecedor", "CNPJ do Cliente:"))
        self.excluircesta_button.setText(_translate("exclusao_fornecedor", "Excluir da Cesta"))
        self.cancelar_button.setText(_translate("exclusao_fornecedor", "Cancelar"))

    def excluirFornecedor(self):
        CnpjFornecedor = self.search_Fornecedor.text()
        connection = psycopg2.connect(user=user,
                                  password=password,
                                  host=host,
                                  port=port,
                                  database=database)
        mycursor = connection.cursor()
        consultaSql = "SELECT DELET_FORNECEDOR('"+ CnpjFornecedor + "');"
        try:
            mycursor.execute(consultaSql)
            connection.commit()
        except:
            print ("erro")
        myresult = mycursor.fetchall()
        print(myresult)
        self.search_Fornecedor.setText("")
        mycursor.close()
        
def sairTela(self, exclusao_Fornecedor):
        exclusao_Fornecedor.close()


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    exclusao_fornecedor = QtWidgets.QWidget()
    ui = Ui_excluir_fornecedor()
    ui.setupUi(exclusao_fornecedor)
    exclusao_fornecedor.show()
    sys.exit(app.exec_())








    
         #ACIONAR BOTAO DE EXCLUSAO
        self.excluircesta_button.clicked.connect(self.excluircesta)
        #ACIONAR BOTAO DE CANCELAR
        self.cancelar_button.clicked.connect(lambda: self.sairTela(exclusao_cesta))

    def excluircesta(self):
        cesta = self.search_client.text()
        connection = psycopg2.connect(user=user,
                                  password=password,
                                  host=host,
                                  port=port,
                                  database=database)
        mycursor = connection.cursor()
        consultaSql = "SELECT DELET_CESTA('"+ cesta + "');"
        try:
            mycursor.execute(consultaSql)
            connection.commit()
        except:
            print ("erro")
        myresult = mycursor.fetchall()
        print(myresult)
        self.search_client("")
        mycursor.close()
    
    def sairTela(self, exclusao_cesta):
        exclusao_cesta.close()